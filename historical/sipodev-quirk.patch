diff -Naur a/i2c-hid.c b/i2c-hid.c
--- a/i2c-hid.c	2018-04-16 23:31:08.642311839 +0200
+++ b/i2c-hid.c	2018-04-16 23:43:06.427118769 +0200
@@ -48,6 +48,86 @@
 #define I2C_HID_QUIRK_SET_PWR_WAKEUP_DEV	BIT(0)
 #define I2C_HID_QUIRK_NO_IRQ_AFTER_RESET	BIT(1)
 
+/* quirk for SIPODEV SP1064 aka SYNA3602 */
+#define SIPODEV_QUIRK
+
+#ifdef SIPODEV_QUIRK
+static unsigned char hiddesc_quirk[]={ 0x1e, 0x00, 0x00, 0x01, 0xdb, 0x01, 0x21,
+				       0x00, 0x24, 0x00, 0x1b, 0x00, 0x25, 0x00,
+				       0x11, 0x00, 0x22, 0x00, 0x23, 0x00, 0x11,
+				       0x09, 0x88, 0x52, 0x06, 0x00, 0x00, 0x00,
+				       0x00, 0x00 };
+
+static unsigned char rdesc_quirk[] = { 0x05, 0x01, 0x09, 0x02, 0xa1, 0x01, 0x85,
+				       0x01, 0x09, 0x01, 0xa1, 0x00, 0x05, 0x09,
+				       0x19, 0x01, 0x29, 0x02, 0x25, 0x01, 0x75,
+				       0x01, 0x95, 0x02, 0x81, 0x02, 0x95, 0x06,
+				       0x81, 0x01, 0x05, 0x01, 0x09, 0x30, 0x09,
+				       0x31, 0x15, 0x81, 0x25, 0x7f, 0x75, 0x08,
+				       0x95, 0x02, 0x81, 0x06, 0xc0, 0xc0, 0x05,
+				       0x0d, 0x09, 0x05, 0xa1, 0x01, 0x85, 0x04,
+				       0x05, 0x0d, 0x09, 0x22, 0xa1, 0x02, 0x15,
+				       0x00, 0x25, 0x01, 0x09, 0x47, 0x09, 0x42,
+				       0x95, 0x02, 0x75, 0x01, 0x81, 0x02, 0x95,
+				       0x01, 0x75, 0x03, 0x25, 0x05, 0x09, 0x51,
+				       0x81, 0x02, 0x75, 0x01, 0x95, 0x03, 0x81,
+				       0x03, 0x05, 0x01, 0x26, 0x44, 0x0a, 0x75,
+				       0x10, 0x55, 0x0e, 0x65, 0x11, 0x09, 0x30,
+				       0x46, 0x1a, 0x04, 0x95, 0x01, 0x81, 0x02,
+				       0x46, 0xbc, 0x02, 0x26, 0x34, 0x05, 0x09,
+				       0x31, 0x81, 0x02, 0xc0, 0x05, 0x0d, 0x09,
+				       0x22, 0xa1, 0x02, 0x25, 0x01, 0x09, 0x47,
+				       0x09, 0x42, 0x95, 0x02, 0x75, 0x01, 0x81,
+				       0x02, 0x95, 0x01, 0x75, 0x03, 0x25, 0x05,
+				       0x09, 0x51, 0x81, 0x02, 0x75, 0x01, 0x95,
+				       0x03, 0x81, 0x03, 0x05, 0x01, 0x26, 0x44,
+				       0x0a, 0x75, 0x10, 0x09, 0x30, 0x46, 0x1a,
+				       0x04, 0x95, 0x01, 0x81, 0x02, 0x46, 0xbc,
+				       0x02, 0x26, 0x34, 0x05, 0x09, 0x31, 0x81,
+				       0x02, 0xc0, 0x05, 0x0d, 0x09, 0x22, 0xa1,
+				       0x02, 0x25, 0x01, 0x09, 0x47, 0x09, 0x42,
+				       0x95, 0x02, 0x75, 0x01, 0x81, 0x02, 0x95,
+				       0x01, 0x75, 0x03, 0x25, 0x05, 0x09, 0x51,
+				       0x81, 0x02, 0x75, 0x01, 0x95, 0x03, 0x81,
+				       0x03, 0x05, 0x01, 0x26, 0x44, 0x0a, 0x75,
+				       0x10, 0x09, 0x30, 0x46, 0x1a, 0x04, 0x95,
+				       0x01, 0x81, 0x02, 0x46, 0xbc, 0x02, 0x26,
+				       0x34, 0x05, 0x09, 0x31, 0x81, 0x02, 0xc0,
+				       0x05, 0x0d, 0x09, 0x22, 0xa1, 0x02, 0x25,
+				       0x01, 0x09, 0x47, 0x09, 0x42, 0x95, 0x02,
+				       0x75, 0x01, 0x81, 0x02, 0x95, 0x01, 0x75,
+				       0x03, 0x25, 0x05, 0x09, 0x51, 0x81, 0x02,
+				       0x75, 0x01, 0x95, 0x03, 0x81, 0x03, 0x05,
+				       0x01, 0x26, 0x44, 0x0a, 0x75, 0x10, 0x09,
+				       0x30, 0x46, 0x1a, 0x04, 0x95, 0x01, 0x81,
+				       0x02, 0x46, 0xbc, 0x02, 0x26, 0x34, 0x05,
+				       0x09, 0x31, 0x81, 0x02, 0xc0, 0x05, 0x0d,
+				       0x55, 0x0c, 0x66, 0x01, 0x10, 0x47, 0xff,
+				       0xff, 0x00, 0x00, 0x27, 0xff, 0xff, 0x00,
+				       0x00, 0x75, 0x10, 0x95, 0x01, 0x09, 0x56,
+				       0x81, 0x02, 0x09, 0x54, 0x25, 0x7f, 0x75,
+				       0x08, 0x81, 0x02, 0x05, 0x09, 0x09, 0x01,
+				       0x25, 0x01, 0x75, 0x01, 0x95, 0x01, 0x81,
+				       0x02, 0x95, 0x07, 0x81, 0x03, 0x05, 0x0d,
+				       0x85, 0x02, 0x09, 0x55, 0x09, 0x59, 0x75,
+				       0x04, 0x95, 0x02, 0x25, 0x0f, 0xb1, 0x02,
+				       0x05, 0x0d, 0x85, 0x07, 0x09, 0x60, 0x75,
+				       0x01, 0x95, 0x01, 0x25, 0x01, 0xb1, 0x02,
+				       0x95, 0x07, 0xb1, 0x03, 0x85, 0x06, 0x06,
+				       0x00, 0xff, 0x09, 0xc5, 0x26, 0xff, 0x00,
+				       0x75, 0x08, 0x96, 0x00, 0x01, 0xb1, 0x02,
+				       0xc0, 0x06, 0x00, 0xff, 0x09, 0x01, 0xa1,
+				       0x01, 0x85, 0x0d, 0x26, 0xff, 0x00, 0x19,
+				       0x01, 0x29, 0x02, 0x75, 0x08, 0x95, 0x02,
+				       0xb1, 0x02, 0xc0, 0x05, 0x0d, 0x09, 0x0e,
+				       0xa1, 0x01, 0x85, 0x03, 0x09, 0x22, 0xa1,
+				       0x02, 0x09, 0x52, 0x25, 0x0a, 0x95, 0x01,
+				       0xb1, 0x02, 0xc0, 0x09, 0x22, 0xa1, 0x00,
+				       0x85, 0x05, 0x09, 0x57, 0x09, 0x58, 0x75,
+				       0x01, 0x95, 0x02, 0x25, 0x01, 0xb1, 0x02,
+				       0x95, 0x06, 0xb1, 0x03, 0xc0, 0xc0 };
+#endif
+
 /* flags */
 #define I2C_HID_STARTED		0
 #define I2C_HID_RESET_PENDING	1
@@ -701,6 +781,12 @@
 		return -EIO;
 	}
 
+#ifdef SIPODEV_QUIRK
+	int i;
+	for(i=0;i<sizeof(rdesc_quirk);i++)
+	  rdesc[i]=rdesc_quirk[i];
+#endif
+
 	i2c_hid_dbg(ihid, "Report Descriptor: %*ph\n", rsize, rdesc);
 
 	ret = hid_parse_report(hid, rdesc, rsize);
@@ -839,6 +925,12 @@
 		return -ENODEV;
 	}
 
+#ifdef SIPODEV_QUIRK
+	int i;
+	for(i=0;i<sizeof(hiddesc_quirk);i++)
+	  ihid->hdesc_buffer[i]=hiddesc_quirk[i];
+#endif
+
 	/* Validate the length of HID descriptor, the 4 first bytes:
 	 * bytes 0-1 -> length
 	 * bytes 2-3 -> bcdVersion (has to be 1.00) */
